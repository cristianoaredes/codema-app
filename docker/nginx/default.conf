server {
    listen 8080;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    
    # Security headers
    include /etc/nginx/snippets/security-headers.conf;
    
    # Disable access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Main application - SPA routing
    location / {
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 10;
        
        try_files $uri $uri/ /index.html;
        
        # Disable caching for HTML to ensure updates are reflected
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # Static assets with long-term caching
    location /assets {
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        access_log off;
        
        # Security headers for static assets
        include /etc/nginx/snippets/security-headers.conf;
    }
    
    # JavaScript and CSS files
    location ~* \.(js|css)$ {
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        access_log off;
        
        # Security headers
        include /etc/nginx/snippets/security-headers.conf;
    }
    
    # Images
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        access_log off;
        
        # Security headers
        include /etc/nginx/snippets/security-headers.conf;
    }
    
    # Fonts
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header Access-Control-Allow-Origin "*" always;
        access_log off;
        
        # Security headers
        include /etc/nginx/snippets/security-headers.conf;
    }
    
    # API proxy (if needed for Supabase or other backends)
    location /api {
        # Rate limiting for API endpoints
        limit_req zone=api burst=30 nodelay;
        limit_conn addr 20;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Proxy to backend (configure as needed)
        # proxy_pass http://backend:3000;
        
        # For now, return 502 as no backend is configured
        return 502;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }
    
    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }
    
    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
    
    # Service worker
    location = /sw.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        expires 0;
        
        # Security headers
        include /etc/nginx/snippets/security-headers.conf;
    }
    
    # Manifest
    location = /manifest.json {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        
        # Security headers
        include /etc/nginx/snippets/security-headers.conf;
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}